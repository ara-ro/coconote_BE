name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application-secret.yml file
        run: |
          echo "${{ secrets.APPLICATION_SECRET_YML }}" > ./src/main/resources/application-secret.yml

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR with Jib
        run: |
          ./gradlew jib --image=730335516193.dkr.ecr.ap-northeast-2.amazonaws.com/coconote/coconote_be:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/coconote
            
            # AWS CLI 설치 확인 및 설치
            if ! command -v aws &> /dev/null; then
            echo "AWS CLI가 설치되지 않았습니다. 설치 중..."
            sudo apt-get update
            sudo apt-get install -y unzip curl
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            fi

            # Docker 설치 확인 및 설치
            if ! type docker > /dev/null; then
              echo "Docker is not installed, installing now..."
              sudo apt-get update && sudo apt-get install -y docker.io
            else
              echo "Docker is already installed."
            fi

            # AWS ECR 로그인
            aws ecr get-login-password --region ap-northeast-2 | sudo docker login --username AWS --password-stdin 730335516193.dkr.ecr.ap-northeast-2.amazonaws.com

            # Docker Compose 실행
            sudo docker-compose pull coconote_app
            sudo docker-compose up -d
